from django.shortcuts import render
from django.core.paginator import Paginator
from django.db import models

class Author(models.Model):
    fullname = models.CharField(max_length=32, null=False)
    born_date = models.CharField(max_length=32, null=False)
    born_location = models.TextField(max_length=64, null=False)
    description = models.CharField(null=False)
    
    def __str__(self):
        return f"{self.fullname}"
    
class Tag(models.Model):
    tag = models.CharField(max_length=32, null=False, unique=True)

    def __str__(self):
        return f"{self.tag}"

class Quote(models.Model):
    author = models.ForeignKey(Author, on_delete=models.CASCADE, default=None, null=True)
    quote = models.TextField(null=False)
    tags = models.ManyToManyField(Tag)

    def __str__(self):
        return f"{self.quote}"

def quotes_by_tag(request, tag_id, page=1):
    print(tag_id)
    q = Quote.objects.prefetch_related('tags').all()
    quotes = []
    for quote in q:
        if tag_id in [tag.id for tag in quote.tags.all()]:
            quotes.append(quote)
    per_page = 10
    paginator = Paginator(quotes, per_page)
    quotes_on_page = paginator.page(page)
    return render(request, 'app_quotes/index.html', context={'quotes': quotes_on_page})